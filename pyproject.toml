[tool.poetry]
name = "gcache"
version = "0.0.0"
description = "Fine grained caching"
authors = ["Lev Neiman <lev.neiman@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "gcache"}]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.10.6"
prometheus-client = "^0.21.1"
cachetools = "^5.5.1"
types-cachetools = "^5.5.0.20240820"
redis = "^5.2.1"
jsonpickle = "^4.0.1"
dogpile-cache = "^1.3.4"
uvloop = "^0.21.0"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-xdist = "^3.6.1"
coverage = "^7.6.12"
pytest-cov = "^6.0.0"
pytest-asyncio = "^0.25.3"
redislite = "^6.2.912183"

[tool.poetry.group.dev.dependencies]
invoke = "^2.2.0"
ruff = "^0.9.3"
pytest-asyncio = "^0.25.2"
mypy = "^1.14.1"
moto = "^5.0.28"
pre-commit = "^4.1.0"


[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gcache"
version = "0.1.0"
description = "Fine grained caching"
authors = [
    { name="Lev Neiman", email="lev.neiman@gmail.com" }
]
license = { text="MIT" }
readme = "README.md"
requires-python = ">=3.10"

[tool.mypy]
mypy_path = ["gcache"]
exclude = "tests"
ignore_missing_imports = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

# Release.
[tool.semantic_release]
version_variables = ["gcache/__init__.py:__version__"]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_source = "tag"
commit_message = "chore(release): v{version}"

[tool.semantic_release.commit_parser_options]
# Release patch version on these tags,
# https://python-semantic-release.readthedocs.io/en/latest/configuration.html#commit-parser-options-dict-str-any
patch_tags = ["fix", "perf", "chore", "docs", "style", "refactor"]
